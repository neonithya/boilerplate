"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GRAPH_INSTANCE_NAME_KEY = void 0;
var GraphRegistry_1 = __importDefault(require("../../graph/registry/GraphRegistry"));
var InjectionMetadata_1 = __importDefault(require("./InjectionMetadata"));
exports.GRAPH_INSTANCE_NAME_KEY = 'GRAPH_INSTANCE_NAME';
var LazyInjector = /** @class */ (function () {
    function LazyInjector() {
    }
    LazyInjector.prototype.inject = function (target, sourceGraph) {
        if (sourceGraph)
            GraphRegistry_1.default.ensureRegistered(sourceGraph);
        var injectionMetadata = new InjectionMetadata_1.default();
        var graph = sourceGraph !== null && sourceGraph !== void 0 ? sourceGraph : this.getGraphInstance(target);
        injectionMetadata.getLazyPropertiesToInject(target.constructor).forEach(function (key) {
            Reflect.set(target, key, graph.retrieve(key));
        });
        return target;
    };
    LazyInjector.prototype.getGraphInstance = function (target) {
        var graphInstanceName = Reflect.getMetadata(exports.GRAPH_INSTANCE_NAME_KEY, target.constructor);
        return GraphRegistry_1.default.getGraphInstance(graphInstanceName);
    };
    return LazyInjector;
}());
exports.default = new LazyInjector();
//# sourceMappingURL=LazyInjector.js.map